class Solution {
    public int solution(int[][] triangle) {
        int answer = 0; 
        int[][] dp = new int[triangle.length][triangle[triangle.length-1].length];
        
        dp[0][0] = triangle[0][0];
        
        for (int i = 1; i < triangle.length; i++)
        {
            //left 
            dp[i][0] = dp[i - 1][0] + triangle[i][0];
            
            //middle
            for (int j = 1; j <= i - 1; j++)
                dp[i][j] = Math.max(dp[i - 1][j - 1], dp[i - 1][j]) + triangle[i][j]; 
            
            //right
            dp[i][i] = dp[i - 1][i - 1] + triangle[i][i];
            
            //update max value
            for (int k = 0; k <= i; k++)
                answer = Math.max(answer, dp[i][k]);
        }      
        return answer;
    }
}